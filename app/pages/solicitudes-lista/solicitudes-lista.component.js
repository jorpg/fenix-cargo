"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var router_1 = require("@angular/router");
var direccion_service_1 = require("./direccion.service");
var angular_1 = require("nativescript-telerik-ui/sidedrawer/angular");
var SolicitudesListaComponent = (function () {
    function SolicitudesListaComponent(router, itemService) {
        this.router = router;
        this.itemService = itemService;
        this.items = this.itemService.getItems();
    }
    SolicitudesListaComponent.prototype.detallesItem = function () {
        this.router.navigate(["/detalles-item"]);
    };
    SolicitudesListaComponent.prototype.ngOnInit = function () {
        this.drawer = this.drawerComponent.sideDrawer;
        this.items = this.itemService.getItems();
    };
    SolicitudesListaComponent.prototype.show = function () {
        this.drawer.showDrawer();
    };
    SolicitudesListaComponent.prototype.home = function () {
        this.router.navigate(["/solicitudes-lista"]);
    };
    SolicitudesListaComponent.prototype.direcciones = function () {
        this.router.navigate(["/direccion"]);
    };
    SolicitudesListaComponent.prototype.perfil = function () {
        this.router.navigate(["/perfil"]);
    };
    return SolicitudesListaComponent;
}());
__decorate([
    core_1.ViewChild(angular_1.RadSideDrawerComponent),
    __metadata("design:type", angular_1.RadSideDrawerComponent)
], SolicitudesListaComponent.prototype, "drawerComponent", void 0);
SolicitudesListaComponent = __decorate([
    core_1.Component({
        selector: "holder",
        templateUrl: "./pages/solicitudes-lista/solicitudes-lista.html",
        styleUrls: ["pages/solicitudes-lista/solicitudes-lista-common.css", "pages/solicitudes-lista/solicitudes-lista.css"]
    }),
    __metadata("design:paramtypes", [router_1.Router, direccion_service_1.ItemService])
], SolicitudesListaComponent);
exports.SolicitudesListaComponent = SolicitudesListaComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29saWNpdHVkZXMtbGlzdGEuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic29saWNpdHVkZXMtbGlzdGEuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQTJEO0FBQzNELDBDQUF5QztBQUN6Qyx5REFBa0Q7QUFHbEQsc0VBQWtHO0FBVWxHLElBQWEseUJBQXlCO0lBS2pDLG1DQUFvQixNQUFlLEVBQVMsV0FBd0I7UUFBaEQsV0FBTSxHQUFOLE1BQU0sQ0FBUztRQUFTLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQ3JFLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUU1QyxDQUFDO0lBRUYsZ0RBQVksR0FBWjtRQUNJLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO0lBRTdDLENBQUM7SUFDQSw0Q0FBUSxHQUFSO1FBQ08sSUFBSSxDQUFDLE1BQU0sR0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQztRQUM1QyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDN0MsQ0FBQztJQUNNLHdDQUFJLEdBQVg7UUFDSSxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFFTSx3Q0FBSSxHQUFYO1FBQ0ksSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVNLCtDQUFXLEdBQWxCO1FBQ0ksSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFDTSwwQ0FBTSxHQUFiO1FBQ0MsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFTCxnQ0FBQztBQUFELENBQUMsQUFqQ0QsSUFpQ0M7QUE3QkQ7SUFEQyxnQkFBUyxDQUFDLGdDQUFzQixDQUFDOzhCQUNWLGdDQUFzQjtrRUFBQztBQUpsQyx5QkFBeUI7SUFMckMsZ0JBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxRQUFRO1FBQ2xCLFdBQVcsRUFBRSxrREFBa0Q7UUFDL0QsU0FBUyxFQUFFLENBQUMsc0RBQXNELEVBQUMsK0NBQStDLENBQUM7S0FDdEgsQ0FBQztxQ0FNZ0MsZUFBTSxFQUFzQiwrQkFBVztHQUw1RCx5QkFBeUIsQ0FpQ3JDO0FBakNZLDhEQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCxPbkluaXQsVmlld0NoaWxkIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xyXG5pbXBvcnQgeyBJdGVtU2VydmljZSB9IGZyb20gXCIuL2RpcmVjY2lvbi5zZXJ2aWNlXCI7XHJcbmltcG9ydCB7SXRlbX1mcm9tIFwiLi9pdGVtXCI7XHJcbmltcG9ydCB7IExpc3RWaWV3RXZlbnREYXRhLFJhZExpc3RWaWV3fSBmcm9tIFwibmF0aXZlc2NyaXB0LXRlbGVyaWstdWkvbGlzdHZpZXdcIjtcclxuaW1wb3J0IHsgUmFkU2lkZURyYXdlckNvbXBvbmVudCxTaWRlRHJhd2VyVHlwZX0gZnJvbSBcIm5hdGl2ZXNjcmlwdC10ZWxlcmlrLXVpL3NpZGVkcmF3ZXIvYW5ndWxhclwiO1xyXG5pbXBvcnQgeyBWaWV3IH0gZnJvbSAndWkvY29yZS92aWV3JztcclxuaW1wb3J0ICogYXMgVXRpbHMgZnJvbSBcInV0aWxzL3V0aWxzXCI7XHJcbmltcG9ydCAqIGFzIEZyYW1lTW9kdWxlIGZyb20gXCJ1aS9mcmFtZVwiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogXCJob2xkZXJcIixcclxuICAgIHRlbXBsYXRlVXJsOiBcIi4vcGFnZXMvc29saWNpdHVkZXMtbGlzdGEvc29saWNpdHVkZXMtbGlzdGEuaHRtbFwiLFxyXG4gICAgc3R5bGVVcmxzOiBbXCJwYWdlcy9zb2xpY2l0dWRlcy1saXN0YS9zb2xpY2l0dWRlcy1saXN0YS1jb21tb24uY3NzXCIsXCJwYWdlcy9zb2xpY2l0dWRlcy1saXN0YS9zb2xpY2l0dWRlcy1saXN0YS5jc3NcIl1cclxufSlcclxuZXhwb3J0IGNsYXNzIFNvbGljaXR1ZGVzTGlzdGFDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gICAgIGl0ZW1zOiBJdGVtW107XHJcbiAgICAgcHJpdmF0ZSBkcmF3ZXI6U2lkZURyYXdlclR5cGVcclxuQFZpZXdDaGlsZChSYWRTaWRlRHJhd2VyQ29tcG9uZW50KVxyXG5wdWJsaWMgZHJhd2VyQ29tcG9uZW50OiBSYWRTaWRlRHJhd2VyQ29tcG9uZW50O1xyXG4gICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcm91dGVyIDogUm91dGVyLHByaXZhdGUgaXRlbVNlcnZpY2U6IEl0ZW1TZXJ2aWNlKXtcclxuICAgIHRoaXMuaXRlbXMgPSB0aGlzLml0ZW1TZXJ2aWNlLmdldEl0ZW1zKCk7XHJcbiAgICBcclxuIH1cclxuXHJcbmRldGFsbGVzSXRlbSgpe1xyXG4gICAgdGhpcy5yb3V0ZXIubmF2aWdhdGUoW1wiL2RldGFsbGVzLWl0ZW1cIl0pO1xyXG5cclxufVxyXG4gbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5kcmF3ZXI9dGhpcy5kcmF3ZXJDb21wb25lbnQuc2lkZURyYXdlcjtcclxuICAgICAgICB0aGlzLml0ZW1zID0gdGhpcy5pdGVtU2VydmljZS5nZXRJdGVtcygpO1xyXG4gICAgfVxyXG4gICAgcHVibGljIHNob3coKXtcclxuICAgICAgICB0aGlzLmRyYXdlci5zaG93RHJhd2VyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGhvbWUoKXtcclxuICAgICAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbXCIvc29saWNpdHVkZXMtbGlzdGFcIl0pO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBkaXJlY2Npb25lcygpe1xyXG4gICAgICAgIHRoaXMucm91dGVyLm5hdmlnYXRlKFtcIi9kaXJlY2Npb25cIl0pO1xyXG4gICAgfVxyXG4gICAgcHVibGljIHBlcmZpbCAoKXtcclxuICAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbXCIvcGVyZmlsXCJdKTtcclxuICAgIH1cclxuICAgIFxyXG59Il19